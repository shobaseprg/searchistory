// rules_version = '2';
//   // function isExistMyUidInField(field){
//   //   return
//   // }
  // function isAuth(){
  //   return request.auth != null
  // }
//   function myUID(){
//     return request.auth.uid
//   }
//   function existingData(){
//     return resource.data
//   }
//   function incomingData(){
//     return request.resource.data
//   }
//   function isContainProhibitedField(fieldList){
//     return incomingData().diff(existingData()).affectedKeys().hasAny(fieldList);
//   }
//   function isAvailableField(fieldList){
//     return incomingData().keys().hasOnly(fieldList)
//   }

//   function isAvailableFieldOnUpdate(FieldList){
//     return incomingData.diff(existingData()).affectedKeys().hasOnly(FieldList)
//   }

// service cloud.firestore {
//   match /databases/{database}/documents {
//     match /user/{docID} {
//       allow read:if isAuth();
//       // allow create:if isAuth() && & docID == myUID()
//       // allow update:if isAuth() && docID == myUID() &&
//       //                 incomingData().name is string &&
//       //                 incomingData().name.size() < 21 &&
//       //                 incomingData().uid == myUID() &&
//       //                 isAvailableField(["name","uid"])

//           // allow create:if isAuth() && docID == myUID() &&
//           //             incomingData().name is string &&
//           //             incomingData().name.size() < 21 &&
//           //             incomingData().uid == myUID()
//     }
//     // match /userPrivate/{docID} {
//     //   allow read:if isAuth() && docID == myUID();
//     //   allow update:if isAuth() && docID == myUID() &&
//     //                   incomingData().email is string &&
//     //                   incomingData().email.size() < 51 &&
//     //                   incomingData().uid == myUID() &&
//     //                   isAvailableField(["email","uid"])
//     // }
//   //   match /topic/{docID} {
//   //   allow read, write: if request.auth != null && isExistMyUidInField("authorizedUIDs");
//   }
// }

rules_version = '2';

  function isAuth(){
    return request.auth != null
  }
  function myUID(){
    return request.auth.uid
  }
  function incomingData(){
    return request.resource.data
  }
  function existingData(){
    return resource.data
  }
  function isAvailableOnCreateField(fieldList){
    return incomingData().keys().hasOnly(fieldList)
  }
  function isAvailableFieldOnUpdate(FieldList){
    return incomingData().diff(existingData()).affectedKeys().hasOnly(FieldList)
  }
service cloud.firestore {
  match /databases/{database}/documents {
    match /userPrivate/{userID} {
      allow get:if isAuth() &&
                    userID == myUID()
      allow create:if isAuth() &&
                      userID == myUID() &&
                      incomingData().email is string &&
                      incomingData().email.size() < 31 &&
                      incomingData().uid == myUID() &&
                      isAvailableOnCreateField(["email","uid"])
      allow update:if isAuth() &&
                      userID == myUID() &&
                      incomingData().email is string &&
                      incomingData().email.size() < 31 &&
                      isAvailableFieldOnUpdate(['email']);
    }
    match /topic/{documentID} {
      allow list:if isAuth() &&
                    myUID() in existingData().authorizedUIDs
      // allow create:if isAuth() &&
      //                 userID == myUID() &&
      //                 incomingData().email is string &&
      //                 incomingData().email.size() < 31 &&
      //                 incomingData().uid == myUID() &&
      //                 isAvailableOnCreateField(["email","uid"])
      // allow update:if isAuth() &&
      //                 userID == myUID() &&
      //                 incomingData().email is string &&
      //                 incomingData().email.size() < 31 &&
      //                 isAvailableFieldOnUpdate(['email']);
    }
  }
}
