rules_version = '2';
  // function isExistMyUidInField(field){
  //   return
  // }
  function isAuth(){
    return request.auth != null
  }
  function myUID(){
    return request.auth.uid
  }
  function existingData(){
    return resource.data
  }
  function incomingData(){
    return request.resource.data
  }
  function isContainProhibitedField(fieldList){
    return incomingData().diff(existingData()).affectedKeys().hasAny(fieldList);
  }

service cloud.firestore {
  match /databases/{database}/documents {
      match /user/{docID} {
      allow create: if isAuth() && docID == myUID() && reqData().uid == myUID()
      allow update: if isAuth() && docID == myUID() && isContainProhibitedField(["uid"])
    }
  }
  match /topic/{docID} {
    allow read, write: if request.auth != null && isExistMyUidInField("authorizedUIDs");
  }
}
